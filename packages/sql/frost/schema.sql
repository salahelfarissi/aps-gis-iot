-- Create a TSDB table
CREATE TABLE "OBSERVATIONS_TS" (
  LIKE "OBSERVATIONS" INCLUDING DEFAULTS INCLUDING CONSTRAINTS EXCLUDING INDEXES
);

-- Create a hypertable
SELECT create_hypertable('"OBSERVATIONS_TS"', 'PHENOMENON_TIME_START');

-- Add data
INSERT INTO "OBSERVATIONS_TS"
SELECT * FROM "OBSERVATIONS";

-- Add indexes
ALTER TABLE "OBSERVATIONS_TS"
ADD PRIMARY KEY ("PHENOMENON_TIME_START");

CREATE INDEX "OBS-DS_ID-ID_TS" ON "OBSERVATIONS_TS" ("DATASTREAM_ID", "ID");
CREATE INDEX "OBS-MDS_ID-ID_TS" ON "OBSERVATIONS_TS" ("MULTI_DATASTREAM_ID", "ID");
CREATE INDEX "OBSERVATIONS_DATASTREAM_ID_TS" ON "OBSERVATIONS_TS" ("DATASTREAM_ID");
CREATE INDEX "OBSERVATIONS_FEATURE_ID_TS" ON "OBSERVATIONS_TS" ("FEATURE_ID");
CREATE INDEX "OBSERVATIONS_MULTI_DATASTREAM_ID_TS" ON "OBSERVATIONS_TS" ("MULTI_DATASTREAM_ID");

-- Add triggers
CREATE TRIGGER datastreams_actualization_delete
AFTER DELETE ON "OBSERVATIONS_TS"
FOR EACH ROW EXECUTE FUNCTION datastreams_update_delete();

CREATE TRIGGER datastreams_actualization_insert
AFTER INSERT ON "OBSERVATIONS_TS"
FOR EACH ROW EXECUTE FUNCTION datastreams_update_insert();

CREATE TRIGGER datastreams_actualization_update
AFTER UPDATE ON "OBSERVATIONS_TS"
FOR EACH ROW EXECUTE FUNCTION datastreams_update_update();

CREATE TRIGGER multidatastreams_actualization_delete
AFTER DELETE ON "OBSERVATIONS_TS"
FOR EACH ROW EXECUTE FUNCTION multidatastreams_update_delete();

CREATE TRIGGER multidatastreams_actualization_insert
AFTER INSERT ON "OBSERVATIONS_TS"
FOR EACH ROW EXECUTE FUNCTION multidatastreams_update_insert();

CREATE TRIGGER multidatastreams_actualization_update
AFTER UPDATE ON "OBSERVATIONS_TS"
FOR EACH ROW EXECUTE FUNCTION multidatastreams_update_update();